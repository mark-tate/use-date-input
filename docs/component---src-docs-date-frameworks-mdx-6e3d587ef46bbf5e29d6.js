(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{Ixyf:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return b})),a.d(t,"default",(function(){return j}));var n=a("Fcif"),r=a("+I+c"),p=(a("mXGw"),a("/FXl")),d=a("TjRS"),s=a("GYKu"),o=a("ZFoC"),l=a("9b5V"),u=a("1yxC"),c=a("1eR8"),i=a("Zm4p"),b=(a("aD51"),{});void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/date-frameworks.mdx"}});var m={_frontmatter:b},O=d.a;function j(e){var t,a,j,f,h,y=e.components,g=Object(r.a)(e,["components"]);return Object(p.b)(O,Object(n.a)({},m,g,{components:y,mdxType:"MDXLayout"}),Object(p.b)("h1",{id:"date-frameworks"},"Date Frameworks"),Object(p.b)("p",null,Object(p.b)("inlineCode",{parentName:"p"},"use-date-input")," provides an adapter API that enables it to work with any date framework."),Object(p.b)("p",null,"The adapter interface is provided to ",Object(p.b)("inlineCode",{parentName:"p"},"use-date-input")," components through the ",Object(p.b)("inlineCode",{parentName:"p"},"adapter")," prop."),Object(p.b)("p",null,"Adapters have been created for all the popular Date frameworks. To keep the bundle size low and to let the user manage versioning, the provided adapters\nrequire peer dependencies to specify the date API."),Object(p.b)("ul",null,Object(p.b)("li",{parentName:"ul"},Object(p.b)("a",{href:"https://date-fns.org/",target:"__blank__"},"date-fns")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("a",{href:"https://day.js.org/",target:"__blank__"},"dayjs")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("a",{href:"https://moment.github.io/luxon/",target:"__blank__"},"luxon")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("a",{href:"https://momentjs.com/",target:"__blank__"},"moment")),Object(p.b)("li",{parentName:"ul"},"... or write your own")),Object(p.b)("h2",{id:"with-date-fns"},"With date-fns"),Object(p.b)("p",null,"Install the dependencies with"),Object(p.b)("pre",null,Object(p.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),"yarn add @date-fns\nyarn add @use-date-input/date-fns-adapter\n")),Object(p.b)("p",null,"OR"),Object(p.b)("pre",null,Object(p.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),"npm install -s @date-fns\nnpm install -s @use-date-input/date-fns-adapter\n")),Object(p.b)("p",null,"Import the adapter into your component"),Object(p.b)("pre",null,Object(p.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),'import { adapter as dateFnsAdapter } from "@use-date-input/date-fns-adapter";\n')),Object(p.b)("p",null,"Use the ",Object(p.b)("inlineCode",{parentName:"p"},"adapter")," prop with the ",Object(p.b)("inlineCode",{parentName:"p"},"use-date-input")," components."),Object(p.b)(o.c,{__position:0,__code:'() => {\n  // import { Calendar } from "@use-date-input/core";\n  // import { adapter as dateFnsAdapter } from "@use-date-input/date-fns-adapter";\n  return (\n    <Calendar\n      adapter={dateFnsAdapter}\n      numOfColumns={2}\n      numOfVisibleMonths={2}\n    />\n  )\n}',__scope:(t={props:g,DefaultLayout:d.a,Calendar:s.c,Playground:o.c,dateFnsAdapter:l.a,dayjsAdapter:u.a,luxonAdapter:c.a,momentAdapter:i.a},t.DefaultLayout=d.a,t._frontmatter=b,t),mdxType:"Playground"},(function(){return Object(p.b)(s.c,{adapter:l.a,numOfColumns:2,numOfVisibleMonths:2,mdxType:"Calendar"})})),Object(p.b)("h2",{id:"with-dayjs"},"With dayjs"),Object(p.b)("p",null,"Install the dependencies with"),Object(p.b)("pre",null,Object(p.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),"yarn add @dayjs\nyarn add @use-date-input/dayjs-adapter\n")),Object(p.b)("p",null,"OR"),Object(p.b)("pre",null,Object(p.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),"npm install -s @dayjs\nnpm install -s @use-date-input/dayjs-adapter\n")),Object(p.b)("p",null,"Import the adapter into your component"),Object(p.b)("pre",null,Object(p.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),'import { adapter as dayjsAdapter } from "@use-date-input/dayjs-adapter";\n')),Object(p.b)("p",null,"Use the ",Object(p.b)("inlineCode",{parentName:"p"},"adapter")," prop with the ",Object(p.b)("inlineCode",{parentName:"p"},"use-date-input")," components."),Object(p.b)(o.c,{__position:1,__code:'() => {\n  // import { Calendar } from "@use-date-input/core";\n  // import dayjsAdapter from "@use-date-input/dayjs-adapter";\n  return (\n    <Calendar\n      adapter={dayjsAdapter}\n      numOfColumns={2}\n      numOfVisibleMonths={2}\n    />\n  )\n}',__scope:(a={props:g,DefaultLayout:d.a,Calendar:s.c,Playground:o.c,dateFnsAdapter:l.a,dayjsAdapter:u.a,luxonAdapter:c.a,momentAdapter:i.a},a.DefaultLayout=d.a,a._frontmatter=b,a),mdxType:"Playground"},(function(){return Object(p.b)(s.c,{adapter:u.a,numOfColumns:2,numOfVisibleMonths:2,mdxType:"Calendar"})})),Object(p.b)("h2",{id:"with-luxon"},"With luxon"),Object(p.b)("p",null,"Install the dependencies with"),Object(p.b)("pre",null,Object(p.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),"yarn add @luxon\nyarn add @use-date-input/luxon-adapter\n")),Object(p.b)("p",null,"OR"),Object(p.b)("pre",null,Object(p.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),"npm install -s @luxon\nnpm install -s @use-date-input/luxon-adapter\n")),Object(p.b)("p",null,"Import the adapter into your component"),Object(p.b)("pre",null,Object(p.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),'import { adapter as luxonAdapter } from "@use-date-input/dayjs-adapter";\n')),Object(p.b)("p",null,"Use the ",Object(p.b)("inlineCode",{parentName:"p"},"adapter")," prop with the ",Object(p.b)("inlineCode",{parentName:"p"},"use-date-input")," components."),Object(p.b)(o.c,{__position:2,__code:'() => {\n  // import { Calendar } from "@use-date-input/core";\n  // import luxonAdapter from "@use-date-input/luxon-adapter";\n  return (\n    <Calendar\n      adapter={luxonAdapter}\n      numOfColumns={2}\n      numOfVisibleMonths={2}\n    />\n  )\n}',__scope:(j={props:g,DefaultLayout:d.a,Calendar:s.c,Playground:o.c,dateFnsAdapter:l.a,dayjsAdapter:u.a,luxonAdapter:c.a,momentAdapter:i.a},j.DefaultLayout=d.a,j._frontmatter=b,j),mdxType:"Playground"},(function(){return Object(p.b)(s.c,{adapter:c.a,numOfColumns:2,numOfVisibleMonths:2,mdxType:"Calendar"})})),Object(p.b)("h2",{id:"with-moment"},"With moment"),Object(p.b)("p",null,"Install the dependencies with"),Object(p.b)("pre",null,Object(p.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),"yarn add @moment\nyarn add @use-date-input/moment-adapter\n")),Object(p.b)("p",null,"OR"),Object(p.b)("pre",null,Object(p.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),"npm install -s @moment\nnpm install -s @use-date-input/moment-adapter\n")),Object(p.b)("p",null,"Import the adapter into your component"),Object(p.b)("pre",null,Object(p.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),'import { adapter as momentAdapter } from "@use-date-input/moment-adapter";\n')),Object(p.b)("p",null,"Use the ",Object(p.b)("inlineCode",{parentName:"p"},"adapter")," prop with the ",Object(p.b)("inlineCode",{parentName:"p"},"use-date-input")," components."),Object(p.b)(o.c,{__position:3,__code:'() => {\n  // import { Calendar } from "@use-date-input/core";\n  // import { adapter as momentAdapter } from "@use-date-input/moment-adapter";\n  return (\n    <Calendar\n      adapter={momentAdapter}\n      numOfColumns={2}\n      numOfVisibleMonths={2}\n    />\n  )\n}',__scope:(f={props:g,DefaultLayout:d.a,Calendar:s.c,Playground:o.c,dateFnsAdapter:l.a,dayjsAdapter:u.a,luxonAdapter:c.a,momentAdapter:i.a},f.DefaultLayout=d.a,f._frontmatter=b,f),mdxType:"Playground"},(function(){return Object(p.b)(s.c,{adapter:i.a,numOfColumns:2,numOfVisibleMonths:2,mdxType:"Calendar"})})),Object(p.b)("h2",{id:"week-offset"},"Week Offset"),Object(p.b)("p",null,"Date frameworks use different week offsets, so you can customize on ",Object(p.b)("inlineCode",{parentName:"p"},"use-date-input")," components through the use of the ",Object(p.b)("inlineCode",{parentName:"p"},"weekOffset")," prop"),Object(p.b)(o.c,{__position:4,__code:'() => {\n  // import { Calendar } from "@use-date-input/core";\n  // import { adapter as luxonAdapter } from "@use-date-input/luxon-adapter";\n  return (\n    <Calendar\n      adapter={luxonAdapter}\n      numOfColumns={2}\n      numOfVisibleMonths={2}\n      weekOffset={6}\n    />\n  )\n}',__scope:(h={props:g,DefaultLayout:d.a,Calendar:s.c,Playground:o.c,dateFnsAdapter:l.a,dayjsAdapter:u.a,luxonAdapter:c.a,momentAdapter:i.a},h.DefaultLayout=d.a,h._frontmatter=b,h),mdxType:"Playground"},(function(){return Object(p.b)(s.c,{adapter:c.a,numOfColumns:2,numOfVisibleMonths:2,weekOffset:6,mdxType:"Calendar"})})),Object(p.b)("h2",{id:"write-your-own-adapter"},"Write Your Own Adapter"),Object(p.b)("p",null,"To write your own adapter or customize the existing adapters, you need to build this interface and provide it\nthrough the ",Object(p.b)("inlineCode",{parentName:"p"},"adapter")," prop."),Object(p.b)("pre",null,Object(p.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"const adapter = ({ weekOffset = 0 } = {}) => ({\n  addDays,\n  addMonths,\n  addWeeks,\n  addYears,\n  createDate,\n  daysInMonth,\n  dayOfWeek,\n  diffInDays,\n  diffInMonths,\n  endOfMonth,\n  endOfWeek,\n  endOfYear,\n  format,\n  getDateFormat,\n  isAfter,\n  isBefore,\n  isSameDay,\n  isSameMonth,\n  isValid:\n  set,\n  startOfMonth,\n  startOfWeek,\n  startOfYear,\n  subtractDays,\n  subtractMonths,\n  subtractWeeks,\n  subtractYears\n});\n")),Object(p.b)("p",null,"For the most cases, this just requires mapping these callbacks to the equivalent date framework call.  "),Object(p.b)("p",null,"For further examples, refer to the provided adapters code, such as\n",Object(p.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/mark-tate/use-date-input/blob/master/packages/date-fns-adapter/src/index.js"}),"@use-date-input/dayjs-adapter"),"."))}void 0!==j&&j&&j===Object(j)&&Object.isExtensible(j)&&!j.hasOwnProperty("__filemeta")&&Object.defineProperty(j,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/date-frameworks.mdx"}}),j.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-date-frameworks-mdx-6e3d587ef46bbf5e29d6.js.map