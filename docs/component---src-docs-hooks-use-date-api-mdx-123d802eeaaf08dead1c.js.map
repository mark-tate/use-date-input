{"version":3,"sources":["webpack:///../src/docs/hooks/useDateAPI.mdx"],"names":["_frontmatter","name","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","useState","Playground","useDateAPI","Calendar","CalendarProvider","formatNames","dateAdapter","selectedDate","setSelectedDate","adapter","onCalendarChange","format","getDateFormat","dateLabel","ARIA_DAY_LABEL","style","padding","isMDXComponent"],"mappings":"wSAWaA,G,UAAe,S,+MAENC,EAKU,YALhC,IAAsBA,EAMhBC,EAAc,CAClBF,gBAEIG,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,cADR,cAGA,qBAAG,0BAAYC,WAAW,KAAvB,cAAH,6DAAuH,0BAAYA,WAAW,KAAvB,oBAAvH,KACA,iBAAQ,CACN,GAAM,WADR,WAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,k4BAAy4BC,SAAO,GACj7BL,QACAH,kBACAS,oBACAC,eACAC,eACAC,aACAC,qBACAC,gBACAC,iBATi7B,gBAUj7Bf,IAVi7B,EAWj7BJ,eAXi7B,GAYh7BQ,QAAQ,eACR,WAAM,MAKmCK,qBAAjCO,EALF,KAKgBC,EALhB,KA0BL,OAAO,YAAC,IAAD,CAAkBC,QAASH,IAAaI,iBAAkBF,EAAiBb,QAAQ,oBACtF,aApBc,SAAC,GAEb,IADJY,EACI,EADJA,aACI,EAIAL,cAFFS,EAFE,EAEFA,OACAC,EAHE,EAGFA,cAEEC,EAAY,gBAEZN,IAEFM,EAAYF,EAAOJ,EADDK,EAAcP,IAAYS,kBAI9C,OAAO,iBAAGC,MAAO,CACfC,QAAS,QACPH,KAIF,CAAWN,aAAcA,EAAcZ,QAAQ,cAC/C,YAAC,IAAD,CAAUA,QAAQ,uB,6MAQ9BH,EAAWyB,gBAAiB","file":"component---src-docs-hooks-use-date-api-mdx-123d802eeaaf08dead1c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mark/Documents/use-date-input-patch/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { useState } from 'react';\nimport { Playground } from 'docz';\nimport { useDateAPI, Calendar, CalendarProvider } from '@use-date-input/core';\nimport { formatNames } from '@use-date-input/common';\nimport { adapter as dateAdapter } from \"@use-date-input/date-fns-adapter\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst DateLabel = makeShortcode(\"DateLabel\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"usedateapi\"\n    }}>{`useDateAPI`}</h1>\n    <p><inlineCode parentName=\"p\">{`useDateAPI`}</inlineCode>{` is a hook which will provide the dateAPI to any child of `}<inlineCode parentName=\"p\">{`CalendarProvider`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Playground __position={0} __code={'() => {\\n  // import { useState } from \\\"react\\\";\\n  // import { formatNames } from \\'@use-date-input/common\\';\\n  // import { adapter as dateAdapter } from \\\"@use-date-input/date-fns-adapter\\\";\\n  // import { CalendarProvider, calendar, useDateAPI } from \\\"@use-date-input/core\\\";\\n  const [selectedDate, setSelectedDate] = useState()\\n  const DateLabel = ({ selectedDate }) => {\\n    const { format, getDateFormat } = useDateAPI()\\n    let dateLabel = \\'Select A Date\\'\\n    if (selectedDate) {\\n      const formatter = getDateFormat(formatNames.ARIA_DAY_LABEL)\\n      dateLabel = format(selectedDate, formatter)\\n    }\\n    return <p style={{ padding: \\'8px\\' }}>{dateLabel}</p>\\n  }\\n  return (\\n    <CalendarProvider\\n      adapter={dateAdapter}\\n      onCalendarChange={setSelectedDate}\\n    >\\n      <DateLabel selectedDate={selectedDate} />\\n      <Calendar />\\n    </CalendarProvider>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Playground,\n      useDateAPI,\n      Calendar,\n      CalendarProvider,\n      formatNames,\n      dateAdapter,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        // import { useState } from \"react\";\n        // import { formatNames } from '@use-date-input/common';\n        // import { adapter as dateAdapter } from \"@use-date-input/date-fns-adapter\";\n        // import { CalendarProvider, calendar, useDateAPI } from \"@use-date-input/core\";\n        const [selectedDate, setSelectedDate] = useState();\n\n        const DateLabel = ({\n          selectedDate\n        }) => {\n          const {\n            format,\n            getDateFormat\n          } = useDateAPI();\n          let dateLabel = 'Select A Date';\n\n          if (selectedDate) {\n            const formatter = getDateFormat(formatNames.ARIA_DAY_LABEL);\n            dateLabel = format(selectedDate, formatter);\n          }\n\n          return <p style={{\n            padding: \"8px\"\n          }}>{dateLabel}</p>;\n        };\n\n        return <CalendarProvider adapter={dateAdapter} onCalendarChange={setSelectedDate} mdxType=\"CalendarProvider\"> \n            <DateLabel selectedDate={selectedDate} mdxType=\"DateLabel\" />\n            <Calendar mdxType=\"Calendar\" />\n        </CalendarProvider>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}