{"version":3,"sources":["webpack:///../src/docs/date-frameworks.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","href","target","__position","__code","__scope","Calendar","Playground","dateFnsAdapter","dayjsAdapter","luxonAdapter","momentAdapter","adapter","numOfColumns","numOfVisibleMonths","weekOffset","isMDXComponent"],"mappings":"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","file":"component---src-docs-date-frameworks-mdx-6e3d587ef46bbf5e29d6.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mark/Documents/use-date-input-patch/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Calendar } from \"@use-date-input/core\";\nimport { Playground } from \"docz\";\nimport { adapter as dateFnsAdapter } from \"@use-date-input/date-fns-adapter\";\nimport { adapter as dayjsAdapter } from \"@use-date-input/dayjs-adapter\";\nimport { adapter as luxonAdapter } from \"@use-date-input/luxon-adapter\";\nimport { adapter as momentAdapter } from \"@use-date-input/moment-adapter\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"date-frameworks\"\n    }}>{`Date Frameworks`}</h1>\n    <p><inlineCode parentName=\"p\">{`use-date-input`}</inlineCode>{` provides an adapter API that enables it to work with any date framework.`}</p>\n    <p>{`The adapter interface is provided to `}<inlineCode parentName=\"p\">{`use-date-input`}</inlineCode>{` components through the `}<inlineCode parentName=\"p\">{`adapter`}</inlineCode>{` prop.`}</p>\n    <p>{`Adapters have been created for all the popular Date frameworks. To keep the bundle size low and to let the user manage versioning, the provided adapters\nrequire peer dependencies to specify the date API.`}</p>\n    <ul>\n      <li parentName=\"ul\"><a href=\"https://date-fns.org/\" target=\"__blank__\">date-fns</a></li>\n      <li parentName=\"ul\"><a href=\"https://day.js.org/\" target=\"__blank__\">dayjs</a></li>\n      <li parentName=\"ul\"><a href=\"https://moment.github.io/luxon/\" target=\"__blank__\">luxon</a></li>\n      <li parentName=\"ul\"><a href=\"https://momentjs.com/\" target=\"__blank__\">moment</a></li>\n      <li parentName=\"ul\">{`... or write your own`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"with-date-fns\"\n    }}>{`With date-fns`}</h2>\n    <p>{`Install the dependencies with`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\",\n        \"metastring\": \"script\",\n        \"script\": true\n      }}>{`yarn add @date-fns\nyarn add @use-date-input/date-fns-adapter\n`}</code></pre>\n    <p>{`OR`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\",\n        \"metastring\": \"script\",\n        \"script\": true\n      }}>{`npm install -s @date-fns\nnpm install -s @use-date-input/date-fns-adapter\n`}</code></pre>\n    <p>{`Import the adapter into your component`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { adapter as dateFnsAdapter } from \"@use-date-input/date-fns-adapter\";\n`}</code></pre>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`adapter`}</inlineCode>{` prop with the `}<inlineCode parentName=\"p\">{`use-date-input`}</inlineCode>{` components.`}</p>\n    <Playground __position={0} __code={'() => {\\n  // import { Calendar } from \\\"@use-date-input/core\\\";\\n  // import { adapter as dateFnsAdapter } from \\\"@use-date-input/date-fns-adapter\\\";\\n  return (\\n    <Calendar\\n      adapter={dateFnsAdapter}\\n      numOfColumns={2}\\n      numOfVisibleMonths={2}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Calendar,\n      Playground,\n      dateFnsAdapter,\n      dayjsAdapter,\n      luxonAdapter,\n      momentAdapter,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        // import { Calendar } from \"@use-date-input/core\";\n        // import { adapter as dateFnsAdapter } from \"@use-date-input/date-fns-adapter\";\n        return <Calendar adapter={dateFnsAdapter} numOfColumns={2} numOfVisibleMonths={2} mdxType=\"Calendar\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"with-dayjs\"\n    }}>{`With dayjs`}</h2>\n    <p>{`Install the dependencies with`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\",\n        \"metastring\": \"script\",\n        \"script\": true\n      }}>{`yarn add @dayjs\nyarn add @use-date-input/dayjs-adapter\n`}</code></pre>\n    <p>{`OR`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\",\n        \"metastring\": \"script\",\n        \"script\": true\n      }}>{`npm install -s @dayjs\nnpm install -s @use-date-input/dayjs-adapter\n`}</code></pre>\n    <p>{`Import the adapter into your component`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { adapter as dayjsAdapter } from \"@use-date-input/dayjs-adapter\";\n`}</code></pre>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`adapter`}</inlineCode>{` prop with the `}<inlineCode parentName=\"p\">{`use-date-input`}</inlineCode>{` components.`}</p>\n    <Playground __position={1} __code={'() => {\\n  // import { Calendar } from \\\"@use-date-input/core\\\";\\n  // import dayjsAdapter from \\\"@use-date-input/dayjs-adapter\\\";\\n  return (\\n    <Calendar\\n      adapter={dayjsAdapter}\\n      numOfColumns={2}\\n      numOfVisibleMonths={2}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Calendar,\n      Playground,\n      dateFnsAdapter,\n      dayjsAdapter,\n      luxonAdapter,\n      momentAdapter,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        // import { Calendar } from \"@use-date-input/core\";\n        // import dayjsAdapter from \"@use-date-input/dayjs-adapter\";\n        return <Calendar adapter={dayjsAdapter} numOfColumns={2} numOfVisibleMonths={2} mdxType=\"Calendar\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"with-luxon\"\n    }}>{`With luxon`}</h2>\n    <p>{`Install the dependencies with`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\",\n        \"metastring\": \"script\",\n        \"script\": true\n      }}>{`yarn add @luxon\nyarn add @use-date-input/luxon-adapter\n`}</code></pre>\n    <p>{`OR`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\",\n        \"metastring\": \"script\",\n        \"script\": true\n      }}>{`npm install -s @luxon\nnpm install -s @use-date-input/luxon-adapter\n`}</code></pre>\n    <p>{`Import the adapter into your component`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { adapter as luxonAdapter } from \"@use-date-input/dayjs-adapter\";\n`}</code></pre>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`adapter`}</inlineCode>{` prop with the `}<inlineCode parentName=\"p\">{`use-date-input`}</inlineCode>{` components.`}</p>\n    <Playground __position={2} __code={'() => {\\n  // import { Calendar } from \\\"@use-date-input/core\\\";\\n  // import luxonAdapter from \\\"@use-date-input/luxon-adapter\\\";\\n  return (\\n    <Calendar\\n      adapter={luxonAdapter}\\n      numOfColumns={2}\\n      numOfVisibleMonths={2}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Calendar,\n      Playground,\n      dateFnsAdapter,\n      dayjsAdapter,\n      luxonAdapter,\n      momentAdapter,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        // import { Calendar } from \"@use-date-input/core\";\n        // import luxonAdapter from \"@use-date-input/luxon-adapter\";\n        return <Calendar adapter={luxonAdapter} numOfColumns={2} numOfVisibleMonths={2} mdxType=\"Calendar\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"with-moment\"\n    }}>{`With moment`}</h2>\n    <p>{`Install the dependencies with`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\",\n        \"metastring\": \"script\",\n        \"script\": true\n      }}>{`yarn add @moment\nyarn add @use-date-input/moment-adapter\n`}</code></pre>\n    <p>{`OR`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\",\n        \"metastring\": \"script\",\n        \"script\": true\n      }}>{`npm install -s @moment\nnpm install -s @use-date-input/moment-adapter\n`}</code></pre>\n    <p>{`Import the adapter into your component`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { adapter as momentAdapter } from \"@use-date-input/moment-adapter\";\n`}</code></pre>\n    <p>{`Use the `}<inlineCode parentName=\"p\">{`adapter`}</inlineCode>{` prop with the `}<inlineCode parentName=\"p\">{`use-date-input`}</inlineCode>{` components.`}</p>\n    <Playground __position={3} __code={'() => {\\n  // import { Calendar } from \\\"@use-date-input/core\\\";\\n  // import { adapter as momentAdapter } from \\\"@use-date-input/moment-adapter\\\";\\n  return (\\n    <Calendar\\n      adapter={momentAdapter}\\n      numOfColumns={2}\\n      numOfVisibleMonths={2}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Calendar,\n      Playground,\n      dateFnsAdapter,\n      dayjsAdapter,\n      luxonAdapter,\n      momentAdapter,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        // import { Calendar } from \"@use-date-input/core\";\n        // import { adapter as momentAdapter } from \"@use-date-input/moment-adapter\";\n        return <Calendar adapter={momentAdapter} numOfColumns={2} numOfVisibleMonths={2} mdxType=\"Calendar\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"week-offset\"\n    }}>{`Week Offset`}</h2>\n    <p>{`Date frameworks use different week offsets, so you can customize on `}<inlineCode parentName=\"p\">{`use-date-input`}</inlineCode>{` components through the use of the `}<inlineCode parentName=\"p\">{`weekOffset`}</inlineCode>{` prop`}</p>\n    <Playground __position={4} __code={'() => {\\n  // import { Calendar } from \\\"@use-date-input/core\\\";\\n  // import { adapter as luxonAdapter } from \\\"@use-date-input/luxon-adapter\\\";\\n  return (\\n    <Calendar\\n      adapter={luxonAdapter}\\n      numOfColumns={2}\\n      numOfVisibleMonths={2}\\n      weekOffset={6}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Calendar,\n      Playground,\n      dateFnsAdapter,\n      dayjsAdapter,\n      luxonAdapter,\n      momentAdapter,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        // import { Calendar } from \"@use-date-input/core\";\n        // import { adapter as luxonAdapter } from \"@use-date-input/luxon-adapter\";\n        return <Calendar adapter={luxonAdapter} numOfColumns={2} numOfVisibleMonths={2} weekOffset={6} mdxType=\"Calendar\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"write-your-own-adapter\"\n    }}>{`Write Your Own Adapter`}</h2>\n    <p>{`To write your own adapter or customize the existing adapters, you need to build this interface and provide it\nthrough the `}<inlineCode parentName=\"p\">{`adapter`}</inlineCode>{` prop.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const adapter = ({ weekOffset = 0 } = {}) => ({\n  addDays,\n  addMonths,\n  addWeeks,\n  addYears,\n  createDate,\n  daysInMonth,\n  dayOfWeek,\n  diffInDays,\n  diffInMonths,\n  endOfMonth,\n  endOfWeek,\n  endOfYear,\n  format,\n  getDateFormat,\n  isAfter,\n  isBefore,\n  isSameDay,\n  isSameMonth,\n  isValid:\n  set,\n  startOfMonth,\n  startOfWeek,\n  startOfYear,\n  subtractDays,\n  subtractMonths,\n  subtractWeeks,\n  subtractYears\n});\n`}</code></pre>\n    <p>{`For the most cases, this just requires mapping these callbacks to the equivalent date framework call.  `}</p>\n    <p>{`For further examples, refer to the provided adapters code, such as\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/mark-tate/use-date-input/blob/master/packages/date-fns-adapter/src/index.js\"\n      }}>{`@use-date-input/dayjs-adapter`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}