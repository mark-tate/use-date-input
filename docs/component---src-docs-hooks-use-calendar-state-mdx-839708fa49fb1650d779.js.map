{"version":3,"sources":["webpack:///../src/docs/hooks/useCalendarState.mdx"],"names":["_frontmatter","name","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","useState","Playground","useDateAPI","useCalendarState","Calendar","CalendarProvider","formatNames","dateAdapter","adapter","format","getDateFormat","selectedDate","startDate","dateLabel","ARIA_DAY_LABEL","style","padding","isMDXComponent"],"mappings":"0SAWaA,G,UAAe,S,qNAENC,EAKU,YALhC,IAAsBA,EAMhBC,EAAc,CAClBF,gBAEIG,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,oBADR,oBAGA,qBAAG,0BAAYC,WAAW,KAAvB,oBAAH,uEACA,iBAAQ,CACN,GAAM,WADR,WAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,qhBAA0hBC,SAAO,GAClkBL,QACAH,kBACAS,oBACAC,eACAC,eACAC,qBACAC,aACAC,qBACAC,gBACAC,iBAVkkB,gBAWlkBhB,IAXkkB,EAYlkBJ,eAZkkB,GAajkBQ,QAAQ,eACR,WAqBC,OAAO,YAAC,IAAD,CAAkBa,QAASD,IAAaZ,QAAQ,oBACnD,aArBc,WAAM,MAIlBO,cAFFO,EAFoB,EAEpBA,OACAC,EAHoB,EAGpBA,cAGWC,EACTR,cADFS,UAEEC,EAAY,gBAEZF,IAEFE,EAAYJ,EAAOE,EADDD,EAAcJ,IAAYQ,kBAI9C,OAAO,iBAAGC,MAAO,CACfC,QAAS,QACPH,KAIF,CAAWlB,QAAQ,cACnB,YAAC,IAAD,CAAUA,QAAQ,uB,mNAQ9BH,EAAWyB,gBAAiB","file":"component---src-docs-hooks-use-calendar-state-mdx-839708fa49fb1650d779.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mark/Documents/use-date-input-patch/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { useState } from 'react';\nimport { Playground } from 'docz';\nimport { useDateAPI, useCalendarState, Calendar, CalendarProvider } from '@use-date-input/core';\nimport { formatNames } from '@use-date-input/common';\nimport { adapter as dateAdapter } from '@use-date-input/date-fns-adapter';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst DateLabel = makeShortcode(\"DateLabel\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"usecalendarstate\"\n    }}>{`useCalendarState`}</h1>\n    <p><inlineCode parentName=\"p\">{`useCalendarState`}</inlineCode>{` is a hook which will provide the current state of your components.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const DateLabel = () => {\\n    const { format, getDateFormat } = useDateAPI()\\n    const { startDate: selectedDate } = useCalendarState()\\n    let dateLabel = \\'Select A Date\\'\\n    if (selectedDate) {\\n      const formatter = getDateFormat(formatNames.ARIA_DAY_LABEL)\\n      dateLabel = format(selectedDate, formatter)\\n    }\\n    return <p style={{ padding: \\'8px\\' }}>{dateLabel}</p>\\n  }\\n  return (\\n    <CalendarProvider adapter={dateAdapter}>\\n      <DateLabel />\\n      <Calendar />\\n    </CalendarProvider>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      Playground,\n      useDateAPI,\n      useCalendarState,\n      Calendar,\n      CalendarProvider,\n      formatNames,\n      dateAdapter,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const DateLabel = () => {\n          const {\n            format,\n            getDateFormat\n          } = useDateAPI();\n          const {\n            startDate: selectedDate\n          } = useCalendarState();\n          let dateLabel = 'Select A Date';\n\n          if (selectedDate) {\n            const formatter = getDateFormat(formatNames.ARIA_DAY_LABEL);\n            dateLabel = format(selectedDate, formatter);\n          }\n\n          return <p style={{\n            padding: \"8px\"\n          }}>{dateLabel}</p>;\n        };\n\n        return <CalendarProvider adapter={dateAdapter} mdxType=\"CalendarProvider\"> \n            <DateLabel mdxType=\"DateLabel\" />\n            <Calendar mdxType=\"Calendar\" />\n        </CalendarProvider>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}