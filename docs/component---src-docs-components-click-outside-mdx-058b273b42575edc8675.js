(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{"+/g1":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return s})),n.d(t,"default",(function(){return j}));var a=n("Fcif"),i=n("+I+c"),l=n("mXGw"),c=n("/FXl"),o=n("TjRS"),r=n("ZFoC"),b=n("WvoA"),d=n("0rkN"),u=n("OWCF"),s=(n("aD51"),{});void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/components/clickOutside.mdx"}});var O={_frontmatter:s},p=o.a;function j(e){var t,n=e.components,j=Object(i.a)(e,["components"]);return Object(c.b)(p,Object(a.a)({},O,j,{components:n,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"clickoutside"},"ClickOutside"),Object(c.b)("p",null,"The ",Object(c.b)("inlineCode",{parentName:"p"},"ClickOutside")," component is used to detect when the mouse is clicked outside the calendar."),Object(c.b)("p",null,"In the default implementation ",Object(c.b)("inlineCode",{parentName:"p"},"ClickOutside")," is used to determine when to close the ",Object(c.b)("inlineCode",{parentName:"p"},"Calendar")," when rendered inside a ",Object(c.b)("inlineCode",{parentName:"p"},"Popper"),".\nClicks within the ",Object(c.b)("inlineCode",{parentName:"p"},"Calender")," or on the associated inputs should not close the ",Object(c.b)("inlineCode",{parentName:"p"},"Calendar")," but everywhere else should."),Object(c.b)("h2",{id:"example"},"Example"),Object(c.b)("p",null,"In this example when you click the buttons they log whether or not it considers it a click outside the rendered tree.\nIn addition an ignored list of refs can be provided which, when clicked, will not invoke ",Object(c.b)("inlineCode",{parentName:"p"},"onClickOutside"),"."),Object(c.b)(r.c,{__position:0,__code:"() => {\n  const ignoreRef = useRef()\n  const ignoreListRefs = [ignoreRef]\n  function handleClickOutside() {\n    console.log('you clicked outside the component')\n  }\n  return (\n    <>\n      <ButtonBar>\n        <Button>Click Outside</Button>\n        <Button ref={ignoreRef}>Click Outside (but in the allow list)</Button>\n      </ButtonBar>\n      <ClickOutside\n        onClickOutside={handleClickOutside}\n        ignoreClickOutsideRefs={ignoreListRefs}\n      >\n        <Button style={{ margin: '8px' }}>Click Inside</Button>\n      </ClickOutside>\n    </>\n  )\n}",__scope:(t={props:j,DefaultLayout:o.a,useRef:l.useRef,Playground:r.c,ClickOutside:b.a,Button:d.a,ButtonBar:u.a},t.DefaultLayout=o.a,t._frontmatter=s,t),mdxType:"Playground"},(function(){var e=Object(l.useRef)(),t=[e];return Object(c.b)(l.Fragment,null,Object(c.b)(u.a,{mdxType:"ButtonBar"},Object(c.b)(d.a,{mdxType:"Button"},"Click Outside"),Object(c.b)(d.a,{ref:e,mdxType:"Button"},"Click Outside (but in the allow list)")),Object(c.b)(b.a,{onClickOutside:function(){console.log("you clicked outside the component")},ignoreClickOutsideRefs:t,mdxType:"ClickOutside"},Object(c.b)(d.a,{style:{margin:"8px"},mdxType:"Button"},"Click Inside")))})),Object(c.b)("h2",{id:"props"},"Props"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Prop Name"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Is Required"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Default Value"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"children"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"node")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"optional"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"children to monitor for click outside events")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"ignoreClickOutsideRefs"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"array")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"optional"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Additional array of refs, will ignore click outside from")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"onClickOutside"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"func")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"optional"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Callback called when the mouse is clicked outside")))))}void 0!==j&&j&&j===Object(j)&&Object.isExtensible(j)&&!j.hasOwnProperty("__filemeta")&&Object.defineProperty(j,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/components/clickOutside.mdx"}}),j.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-components-click-outside-mdx-058b273b42575edc8675.js.map