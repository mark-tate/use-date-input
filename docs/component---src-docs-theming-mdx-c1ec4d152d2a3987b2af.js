(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{n1AX:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return O})),t.d(n,"default",(function(){return C}));var a=t("Fcif"),o=t("+I+c"),r=(t("mXGw"),t("/FXl")),s=t("TjRS"),m=t("ZFoC"),p=t("UutA"),u=t("GYKu"),i=t("esdE"),l=t("5Wd7"),c=t("9jhi"),d=t("PKSg"),b=t("EoFh"),h=t.n(b),f=t("lOOT"),O=(t("aD51"),{});void 0!==O&&O&&O===Object(O)&&Object.isExtensible(O)&&!O.hasOwnProperty("__filemeta")&&Object.defineProperty(O,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/theming.mdx"}});var y={_frontmatter:O},j=s.a;function C(e){var n,t,b=e.components,C=Object(o.a)(e,["components"]);return Object(r.b)(j,Object(a.a)({},y,C,{components:b,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"theming"},"Theming"),Object(r.b)("p",null,"Your theme defines your brand, so ",Object(r.b)("inlineCode",{parentName:"p"},"use-date-input")," components are naked, with just minimal layout styles.  "),Object(r.b)("p",null,"Instead ",Object(r.b)("inlineCode",{parentName:"p"},"use-date-input")," provides a comphrensive approach to theming, enabling you to replace, either the style or\nthe component, for every ",Object(r.b)("inlineCode",{parentName:"p"},"use-date-input")," element."),Object(r.b)("p",null,"Using the ",Object(r.b)("inlineCode",{parentName:"p"},"theme")," prop, go from the default styles"),Object(r.b)(m.c,{__position:0,__code:"() => {\n  const theme = useTheme()\n  const isSmallBreakpoint = useMediaQuery(theme.breakpoints.down('sm'))\n  const numOfColumns = isSmallBreakpoint ? 1 : 2\n  return (\n    <Calendar\n      adapter={dateAdapter}\n      numOfColumns={numOfColumns}\n      numOfVisibleMonths={numOfColumns}\n    />\n  )\n}",__scope:(n={props:C,DefaultLayout:s.a,useDocs:m.i,Link:m.b,Playground:m.c,styled:p.c,Day:u.e,Calendar:u.c,getDay:i.a,eachDayOfInterval:l.a,dateAdapter:c.b,sampleTheme:d.a,useMediaQuery:h.a,useTheme:f.a},n.DefaultLayout=s.a,n._frontmatter=O,n),mdxType:"Playground"},(function(){var e=Object(f.a)(),n=h()(e.breakpoints.down("sm"))?1:2;return Object(r.b)(u.c,{adapter:c.b,numOfColumns:n,numOfVisibleMonths:n,mdxType:"Calendar"})})),Object(r.b)("p",null,"to this, with just one ",Object(r.b)("inlineCode",{parentName:"p"},"theme")," prop"),Object(r.b)(m.c,{__position:1,__code:"() => {\n  const theme = useTheme()\n  const isSmallBreakpoint = useMediaQuery(theme.breakpoints.down('sm'))\n  const numOfColumns = isSmallBreakpoint ? 1 : 2\n  return (\n    <Calendar\n      adapter={dateAdapter}\n      numOfColumns={numOfColumns}\n      numOfVisibleMonths={numOfColumns}\n      theme={sampleTheme}\n    />\n  )\n}",__scope:(t={props:C,DefaultLayout:s.a,useDocs:m.i,Link:m.b,Playground:m.c,styled:p.c,Day:u.e,Calendar:u.c,getDay:i.a,eachDayOfInterval:l.a,dateAdapter:c.b,sampleTheme:d.a,useMediaQuery:h.a,useTheme:f.a},t.DefaultLayout=s.a,t._frontmatter=O,t),style:{padding:0,background:"none"},mdxType:"Playground"},(function(){var e=Object(f.a)(),n=h()(e.breakpoints.down("sm"))?1:2;return Object(r.b)(u.c,{adapter:c.b,numOfColumns:n,numOfVisibleMonths:n,theme:d.a,mdxType:"Calendar"})})),Object(r.b)("h2",{id:"create-your-own-theme"},"Create Your Own Theme"),Object(r.b)("p",null,"Built upon ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"%22https://styled-components.com%22"}),"styled-components")," each element of ",Object(r.b)("inlineCode",{parentName:"p"},"use-date-input")," is\nthemable by overriding/etending the default style.  "),Object(r.b)("p",null,"If you want to style the default components then create a new theme, using the ",Object(r.b)("inlineCode",{parentName:"p"},"theme")," prop.  "),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'// import { Calendar } from "@use-date-input/core";\n// import { adapter as dateAdapter } from "@use-date-input/date-fns-adapter";\n\nconst yourTheme = {\n    AnimatedGroup: { /* Overidden component style */ },,\n    AnimatedMonthGroup: {},\n    Day: {},\n    DayOfWeek: {},\n    Header: {},\n    MonthCell: {},\n    MonthGroup: {},\n    MonthTitle: {},\n    Month: {},\n    MonthHeader: {},\n    NextButton: {},\n    PreviousButton: {},\n    Root: {},\n    YearTitle: {},\n    Week: {},\n    WeekHeader: {},\n    WeekRow: {},\n};\n\nfunction ThemedCalendar(props) {\n    return (\n        <Calendar\n            adapter={dateAdapter}\n            theme={yourTheme}\n            {...props}\n        />\n    );\n}\n')),Object(r.b)("p",null,"Refer to ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/mark-tate/use-date-input/blob/master/stories/sampleTheme.js"}),"sampleTheme.js")," from the repo for a further example."),Object(r.b)("p",null,"If using ",Object(r.b)("inlineCode",{parentName:"p"},"input")," components with the ",Object(r.b)("inlineCode",{parentName:"p"},"useDateInput/useDateRangeInput")," hooks, then simply style the elements yourself, before\ncomposing with ",Object(r.b)("inlineCode",{parentName:"p"},"Calendar"),"."))}void 0!==C&&C&&C===Object(C)&&Object.isExtensible(C)&&!C.hasOwnProperty("__filemeta")&&Object.defineProperty(C,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/theming.mdx"}}),C.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-theming-mdx-c1ec4d152d2a3987b2af.js.map