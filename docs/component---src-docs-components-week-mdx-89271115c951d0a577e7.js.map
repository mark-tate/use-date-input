{"version":3,"sources":["webpack:///../src/docs/components/week.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","CalendarProvider","Week","dateAdapter","addDays","today","createDate","days","Array","fill","reduce","result","day","dayIndex","adapter","parentMonth","isMDXComponent"],"mappings":"wSASaA,G,UAAe,S,8MAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,QADR,QAGA,4BAAW,0BAAYC,WAAW,KAAvB,QAAX,2CAAuG,0BAAYA,WAAW,KAAvB,OAAvG,oCAA2L,0BAAYA,WAAW,KAAvB,YAA3L,WACA,iBAAQ,CACN,GAAM,WADR,WAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,qXAAsXC,SAAO,GAC9ZL,QACAH,kBACAS,eACAC,qBACAC,SACAC,iBAN8Z,gBAO9ZZ,IAP8Z,EAQ9ZH,eAR8Z,GAS7ZO,QAAQ,eACR,WAAM,MAIDQ,cAFFC,EAFG,EAEHA,QAGIC,GAAQC,EALT,EAGHA,cAGIC,EAAOC,MAAM,GAAGC,KAAK,GAAGC,QAAO,SAACC,EAAQC,EAAKC,GACjD,4BAAWF,GAAX,CAAmBP,EAAQC,EAAOQ,OACjC,IACH,OAAO,YAAC,IAAD,CAAkBC,QAASX,IAAaR,QAAQ,oBACnD,YAAC,IAAD,CAAMY,KAAMA,EAAMQ,YAAaV,EAAOV,QAAQ,aAItD,iBAAQ,CACN,GAAM,SADR,SAGA,yBACE,qBAAOC,WAAW,SAChB,kBAAIA,WAAW,SACb,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,aAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,eAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,iBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,aAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,OACR,0BAAYA,WAAW,MAAvB,WACH,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,QAEX,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,+BAIF,kBAAIA,WAAW,SACb,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,OACR,0BAAYA,WAAW,MAAvB,UACH,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,QAEX,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,6BAIF,kBAAIA,WAAW,SACb,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,eAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,OACR,0BAAYA,WAAW,MAAvB,WACH,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,QAEX,8BAAIA,WAAW,MAAS,CACtB,MAAS,OADX,qEAMN,iBAAQ,CACN,GAAM,aADR,aAGA,wEACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,mDAIL,wFAAuE,0BAAYA,WAAW,KAAvB,cAAvE,YAA0I,0BAAYA,WAAW,KAAvB,oBAA1I,IAA2M,kBAAIA,WAAW,MAA1N,iBACW,6BAAGA,WAAW,KAAQ,CAC7B,KAAQ,oFADD,gCADX,KAIA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,mDAIL,mJ,4MAKJJ,EAAWwB,gBAAiB","file":"component---src-docs-components-week-mdx-89271115c951d0a577e7.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mark/Documents/use-date-input-patch/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport { CalendarProvider, Week } from \"@use-date-input/core\";\nimport { adapter as dateAdapter } from \"@use-date-input/date-fns-adapter\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"week\"\n    }}>{`Week`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Week`}</inlineCode>{` components renders a week, as a row of `}<inlineCode parentName=\"p\">{`Day`}</inlineCode>{` components based on the current `}<inlineCode parentName=\"p\">{`Calendar`}</inlineCode>{` state.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const { addDays, createDate } = dateAdapter()\\n  const today = createDate()\\n  const days = Array(7)\\n    .fill(0)\\n    .reduce((result, day, dayIndex) => {\\n      return [...result, addDays(today, dayIndex)]\\n    }, [])\\n  return (\\n    <CalendarProvider adapter={dateAdapter}>\\n      <Week days={days} parentMonth={today} />\\n    </CalendarProvider>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      CalendarProvider,\n      Week,\n      dateAdapter,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const {\n          addDays,\n          createDate\n        } = dateAdapter();\n        const today = createDate();\n        const days = Array(7).fill(0).reduce((result, day, dayIndex) => {\n          return [...result, addDays(today, dayIndex)];\n        }, []);\n        return <CalendarProvider adapter={dateAdapter} mdxType=\"CalendarProvider\">\n            <Week days={days} parentMonth={today} mdxType=\"Week\" />\n        </CalendarProvider>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Is Required`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default Value`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Class name of root element`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`days`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`array`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Array of dates to render`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`parentMonth`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`object`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`to determine days of weeks, which are outside of current month`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"importing\"\n    }}>{`Importing`}</h2>\n    <p>{`It can be imported as either the base component`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { Week } from \"@use-date-input/core\";\n`}</code></pre>\n    <p>{`or as an overridable component that can be replaced through the `}<inlineCode parentName=\"p\">{`components`}</inlineCode>{` prop in `}<inlineCode parentName=\"p\">{`CalendarProvider`}</inlineCode>{`.`}<br parentName=\"p\"></br>{`\n`}{`Refer to `}<a parentName=\"p\" {...{\n        \"href\": \"https://mark-tate.github.io/use-date-input/theming#how-to-replace-ui-components\"\n      }}>{`How to replace UI components`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { Week } from \"@use-date-input/core\";\n`}</code></pre>\n    <p>{`If providing your own component, it can be useful to import the base component and use it within your composition.  `}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}